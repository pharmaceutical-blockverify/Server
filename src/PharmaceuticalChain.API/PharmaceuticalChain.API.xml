<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PharmaceuticalChain.API</name>
    </assembly>
    <members>
        <member name="M:PharmaceuticalChain.API.Controllers.TenantsController.CreateCompanyAsync(PharmaceuticalChain.API.Controllers.Models.Commands.CreateTenantCommand)">
            <summary>
            Send a transaction to create a new tenant on the Ethereum network.
            </summary>
            <param name="command">
                Command with options to create new tenant.
                Phone number is optional.
            </param>
            <returns></returns>
            <remarks>
                The API creates a transaction to create a new tenant on the network and returns right away.
                It does not wait for the transaction to be mined to the network.
                There will be background jobs to check the status of this transaction.
                Consider using query APIs to get the status of the tenant or the transaction.
            </remarks>
        </member>
        <member name="M:PharmaceuticalChain.API.Controllers.TenantsController.DeleteTenantAsync(System.Guid)">
            <summary>
            Delete a tenant from the blockchain and database.
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Controllers.TenantsController.GetTenants">
            <summary>
            Query and return information of all tenants on the network/database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Controllers.TenantsController.GetTenant(System.Guid)">
            <summary>
            Query a tenant information with its Id.
            </summary>
            <returns>Return information about a tenant.</returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Controllers.TenantsController.GetContractAddress(System.Guid)">
            <summary>
            Get contract address on the blockchain network that preresents a tenant object.
            </summary>
            <param name="tenantId">Id of the tenant</param>
            <returns>Contract address for the tenant on the blockchain.</returns>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.BlockchainObject.TransactionHash">
            <summary>
            Transaction hash of the master transaction used to initialize internal contract to create this tenant.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.BlockchainObject.ContractAddress">
            <summary>
            Address of the Tenant contract object on the blockchain network.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.Tenant.ManufacturedBatches">
            <summary>
            Batches of medicines that are manufactured by this tenant.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.Tenant.SendTransfers">
            <summary>
            Transfers which are made by this tenant.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.Tenant.ReceiveTransfers">
            <summary>
            Transfers that are sent to this tenant.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.Tenant.TransactionHash">
            <summary>
            Transaction hash of the master transaction used to initialize internal contract to create this tenant.
            </summary>
        </member>
        <member name="P:PharmaceuticalChain.API.Models.Database.Tenant.ContractAddress">
            <summary>
            Address of the Tenant contract object on the blockchain network.
            </summary>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Implementations.EthereumService.PharmaceuticalChain#API#Services#Interfaces#IEthereumService#GetTransactionReceipt(System.String)">
            <summary>
            
            </summary>
            <param name="transactionHash"></param>
            <see cref="!:https://docs.nethereum.com/en/latest/introduction/web3/"/>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.IDrugTransactionService.Create(System.UInt32,System.UInt32,System.String,System.String,System.UInt32,System.DateTime,System.DateTime,System.Guid)">
            <summary>
            Create a transaction indicating that a company has sent some pills to another company.
            Although counted individually, pills should be sent in packages so <paramref name="packageId"/> is also required.
            </summary>
            <param name="fromCompany">Id of the orginial company.</param>
            <param name="toCompany">Id of the receiver company</param>
            <param name="pillName">Name of the drug.</param>
            <param name="packageId">Package Id which the drugs belong to.</param>
            <param name="value">Number of pills are being transfered with this transaction.</param>
            <param name="receiptId">A drug transaction belongs to a receipt.</param>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.IDrugTransactionService.CreateAndReturnReceipt(System.Int32,System.Int32)">
            <summary>
            Create and return Id of the receipt. Use this Id to attach to drug transactions that belong to this receipt.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.IEthereumService.GetObjectContractAddress(System.Guid)">
            <summary>
            Get address of object contracts on the blockchain network.
            </summary>
            <param name="id">
                Each object contract contains an id.
                This id is created by the backend in the creation process (before it is used to in creation transaction on blockchain.)
            </param>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.ITenantService.Create(System.String,System.String,System.String,System.String,System.String,System.String,PharmaceuticalChain.API.Models.Database.TenantTypes)">
            <summary>
            Create a new company in the database and Ethereum network.
            </summary>
            <returns>Return the Id of the newly created company</returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.ITenantService.Remove(System.Guid)">
            <summary>
            Remove a tenant in the blockchain.
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:PharmaceuticalChain.API.Services.Interfaces.ITenantService.GetContractAddress(System.Guid)">
            <summary>
            Get contract address of a tenant on blockchain network.
            </summary>
            <param name="id"></param>
        </member>
    </members>
</doc>
